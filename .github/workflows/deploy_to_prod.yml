# This is San Diego Voters Voice Github Action for
# deployment to Firebase
name: deploy_to_prod_hosting

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# TODO:  Add push when changes are made to dist/sdvv-front directory
#        basically a new release
#Customize workflow trigger
on:
  push:
    tags:
      - deploy-to-prod-hosting*
#    branches:
#      - master
#      - release/*

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate build number
        uses: einaregilsson/build-number@v2
        with:
          token: ${{secrets.github_token}}
          prefix: front-end
      - name: Print new build number
        run: echo "Build number is $BUILD_NUMBER"
      # Checks-out repository under $GITHUB_WORKSPACE
      # and run Cypress e2e Tests
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Install dependancies
        run: npm install
      - name: Build
        run: npm run build -- --c=production
      - name: Cypress e2e run with Chrome
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          spec: cypress/integration/sdvv-frontend_spec.js
          headless: true
          quiet: true
          tag: Github-${{github.actor}}-${{github.run_id}}
      - name: Cypress e2e run with Firefox
        uses: cypress-io/github-action@v2
        with:
          browser: firefox
          spec: cypress/integration/sdvv-frontend_spec.js
          headless: true
          quiet: true
          tag: Github-${{github.actor}}-${{github.run_id}}
      - name: Save E2E Artifacts
          uses: actions/checkout@v1
          uses: cypress-io/github-action@v2
          # after the test run completes
          # store videos and any screenshots
          # NOTE: screenshots will be generated only if E2E test failed
          # thus we store screenshots only on failures
          # Alternative: create and commit an empty cypress/screenshots folder
          # to always have something to upload
          uses: actions/upload-artifact@v1
          if: failure()
          with:
            name: cypress-screenshots
            path: cypress/screenshots
        # Test run video was always captured, so this action uses "always()" condition
          uses: actions/upload-artifact@v1
          if: always()
          with:
            name: cypress-videos
            path: cypress/videos
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist 
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:production -m "Github-${{github.actor}}-${{github.run_id}}" --non-interactive
        env:
          #pass Firebase token to allow updating Firebase site
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          # pass the Cypress Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}